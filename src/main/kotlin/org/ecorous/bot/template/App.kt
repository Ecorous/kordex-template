/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.ecorous.bot.template

import com.kotlindiscord.kord.extensions.ExtensibleBot
import com.kotlindiscord.kord.extensions.utils.env
import dev.kord.common.entity.Snowflake
import org.ecorous.bot.template.extensions.TestExtension
import org.slf4j.LoggerFactory

val logger = LoggerFactory.getLogger("org.ecorous.bot.template")

val TEST_SERVER_ID = Snowflake(
	env("TEST_SERVER").toLong()  // Get the test server ID from the env vars or a .env file
)

private val TOKEN = env("TOKEN")   // Get the bot' token from the env vars or a .env file

suspend fun main() {
	if (!DB.init()) {
		logger.error("Database failed to initialize. This bot requires a database to function. ")
		logger.error("Please check your database configuration and try again.")
		logger.error("Valid database configuration variables are: BOT_DATABASE, BOT_DATABASE_USER, BOT_DATABASE_PASSWORD, BOT_DATABASE_HOST, BOT_DATABASE_PORT")
		return
	}
	val bot = ExtensibleBot(TOKEN) {
		chatCommands {
			defaultPrefix = "?"
			enabled = true

			prefix { default ->
				if (guildId == TEST_SERVER_ID) {
					// For the test server, we use ! as the command prefix
					"!"
				} else {
					// For other servers, we use the configured default prefix
					default
				}
			}
		}

		extensions {
			add(::TestExtension)
		}
	}

	bot.start()
}
